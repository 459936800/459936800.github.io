<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hexo插入图片</title>
      <link href="2020/11/11/photo/"/>
      <url>2020/11/11/photo/</url>
      
        <content type="html"><![CDATA[<p>写篇blog记录一下。</p><h2 id="第一步：安装插件，在hexo根目录打开Git-Bash-执行"><a href="#第一步：安装插件，在hexo根目录打开Git-Bash-执行" class="headerlink" title="第一步：安装插件，在hexo根目录打开Git Bash,执行"></a>第一步：安装插件，在hexo根目录打开Git Bash,执行</h2><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-asset-image --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="第二步：打开hexo的配置文件-config-yml"><a href="#第二步：打开hexo的配置文件-config-yml" class="headerlink" title="第二步：打开hexo的配置文件_config.yml"></a>第二步：打开hexo的配置文件_config.yml</h2><p>找到 post_asset_folder，把这个选项从false改成true</p><a id="more"></a><h2 id="第三步：修改一下代码"><a href="#第三步：修改一下代码" class="headerlink" title="第三步：修改一下代码"></a>第三步：修改一下代码</h2><p>打开/node_modules/hexo-asset-image/index.js<br>将内容更换为下面的代码</p><pre class="line-numbers language-JavaScript"><code class="language-JavaScript">'use strict';var cheerio = require('cheerio');// http://stackoverflow.com/questions/14480345/how-to-get-the-nth-occurrence-in-a-stringfunction getPosition(str, m, i) {  return str.split(m, i).join(m).length;}var version = String(hexo.version).split('.');hexo.extend.filter.register('after_post_render', function(data){  var config = hexo.config;  if(config.post_asset_folder){        var link = data.permalink;    if(version.length > 0 && Number(version[0]) == 3)       var beginPos = getPosition(link, '/', 1) + 1;    else       var beginPos = getPosition(link, '/', 3) + 1;    // In hexo 3.1.1, the permalink of "about" page is like ".../about/index.html".    var endPos = link.lastIndexOf('/') + 1;    link = link.substring(beginPos, endPos);    var toprocess = ['excerpt', 'more', 'content'];    for(var i = 0; i < toprocess.length; i++){      var key = toprocess[i];      var $ = cheerio.load(data[key], {        ignoreWhitespace: false,        xmlMode: false,        lowerCaseTags: false,        decodeEntities: false      });      $('img').each(function(){        if ($(this).attr('src')){            // For windows style path, we replace '\' to '/'.            var src = $(this).attr('src').replace('\\', '/');            if(!/http[s]*.*|\/\/.*/.test(src) &&               !/^\s*\//.test(src)) {              // For "about" page, the first part of "src" can't be removed.              // In addition, to support multi-level local directory.              var linkArray = link.split('/').filter(function(elem){                return elem != '';              });              var srcArray = src.split('/').filter(function(elem){                return elem != '' && elem != '.';              });              if(srcArray.length > 1)                srcArray.shift();              src = srcArray.join('/');              $(this).attr('src', config.root + link + src);              console.info&&console.info("update link as:-->"+config.root + link + src);            }        }else{            console.info&&console.info("no src attr, skipped...");            console.info&&console.info($(this));        }      });      data[key] = $.html();    }  }});<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="第四步：现在就可以插入图片了"><a href="#第四步：现在就可以插入图片了" class="headerlink" title="第四步：现在就可以插入图片了"></a>第四步：现在就可以插入图片了</h2><p>比如hexo new post photo之后<br>就在source/_posts生成photo.md文件和photo文件夹，我们把要插入的图片复制到photo文件夹内，<br>在photo.md文件里面按markdown的标准写,（我的文件名是head.jpeg）比如</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token operator">!</span><span class="token punctuation">[</span>这是代替图片的文字，随便写<span class="token punctuation">]</span><span class="token punctuation">(</span>head.jpeg<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2020/11/11/photo/avatar.gif" alt="这是代替图片的文字，随便写"></p>]]></content>
      
      
      <categories>
          
          <category> web前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 教程 </tag>
            
            <tag> 插件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo发布到Ubuntu云服务器</title>
      <link href="2020/11/10/hexo1/"/>
      <url>2020/11/10/hexo1/</url>
      
        <content type="html"><![CDATA[<h2 id="本地安装Hexo-node-js-git"><a href="#本地安装Hexo-node-js-git" class="headerlink" title="本地安装Hexo,node.js,git"></a>本地安装Hexo,node.js,git</h2><p>请自行百度</p><h2 id="服务器端"><a href="#服务器端" class="headerlink" title="服务器端"></a>服务器端</h2><p>首先需要一台Ubuntu服务器，并且可以用ubuntu用户身份正常登陆.</p><h2 id="安装Nginx"><a href="#安装Nginx" class="headerlink" title="安装Nginx"></a>安装Nginx</h2><p>请自行百度</p><a id="more"></a><h4 id="配置Nginx托管文件目录"><a href="#配置Nginx托管文件目录" class="headerlink" title="配置Nginx托管文件目录"></a>配置Nginx托管文件目录</h4><p>创建/var/www/hexo目录，用于Nginx托管，修改目录所有权和权限。</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">mkdir</span> -p /var/www/hexo<span class="token function">sudo</span> <span class="token function">chown</span> -R <span class="token variable">$USER</span><span class="token keyword">:</span><span class="token variable">$USER</span> /var/www/hexo<span class="token function">sudo</span> <span class="token function">chmod</span> -R 755 /var/www/hexo<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="nginx-config配置"><a href="#nginx-config配置" class="headerlink" title="nginx.config配置"></a>nginx.config配置</h4><pre class="line-numbers language-config"><code class="language-config">...server {    listen 80 default_server;    listen [::]:80 default_server ipv6only=on;    root /var/www/hexo; # 需要修改的部分    index index.html index.htm;...<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="重启Nginx服务"><a href="#重启Nginx服务" class="headerlink" title="重启Nginx服务"></a>重启Nginx服务</h4><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">service</span> nginx restart<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="打包程序发布到服务器"><a href="#打包程序发布到服务器" class="headerlink" title="打包程序发布到服务器"></a>打包程序发布到服务器</h4><p>执行代码后直接把public内的文件拷贝到/var/www/hexo即可</p><pre class="line-numbers language-bash"><code class="language-bash">hexo g<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="如果要配置git发布请继续看下去"><a href="#如果要配置git发布请继续看下去" class="headerlink" title="如果要配置git发布请继续看下去"></a>如果要配置git发布请继续看下去</h1><h4 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h4><p>Git 用于版本管理和部署，Nginx 用于静态博客托管。</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt-get</span> update<span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> <span class="token function">git</span> nginx -y<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="配置git仓库路径"><a href="#配置git仓库路径" class="headerlink" title="配置git仓库路径"></a>配置git仓库路径</h4><p>在/var/repo/下创建名为hexo_static的裸仓库。用如下命令</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">mkdir</span> /var/repo/<span class="token function">sudo</span> <span class="token function">chown</span> -R <span class="token variable">$USER</span><span class="token keyword">:</span><span class="token variable">$USER</span> /var/repo/<span class="token function">sudo</span> <span class="token function">chmod</span> -R 755 /var/repo/<span class="token function">cd</span> /var/repo/<span class="token function">git</span> init --bare hexo_static.git<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="创建Git钩子"><a href="#创建Git钩子" class="headerlink" title="创建Git钩子"></a>创建Git钩子</h2><p>在自动生成的 hooks 目录下创建一个新的钩子文件：</p><pre class="line-numbers language-bash"><code class="language-bash">vim /var/repo/hexo_static.git/hooks/post-receive<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在该文件中添加两行代码，指定 Git 的工作树（源代码）和 Git 目录（配置文件等）。</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash</span><span class="token function">git</span> --work-tree<span class="token operator">=</span>/var/www/hexo --git-dir<span class="token operator">=</span>/var/repo/hexo_static.git checkout -f<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>保存并退出文件，并让该文件变为可执行文件。</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">chmod</span> +x /var/repo/hexo_static.git/hooks/post-receive<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="回到本地配置"><a href="#回到本地配置" class="headerlink" title="回到本地配置"></a>回到本地配置</h2><h4 id="修改Hexo的默认配置"><a href="#修改Hexo的默认配置" class="headerlink" title="修改Hexo的默认配置"></a>修改Hexo的默认配置</h4><p>在站点config.yml中修改博客的地址url</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># URL</span><span class="token comment" spellcheck="true">## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'</span>url: http://server-ip <span class="token comment" spellcheck="true"># 没有绑定域名时填写服务器的实际 IP 地址。</span>root: /permalink: :year/:month/:day/:title/permalink_defaults:<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="通过Git部署"><a href="#通过Git部署" class="headerlink" title="通过Git部署"></a>通过Git部署</h4><p>从服务器上把hexo_static仓库克隆下来, 以此来将服务器地址添加到受信任的站点中。</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">git</span> clone ubuntu@server_ip:/var/repo/hexo_static.git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>注意在第一次进行这一步时会提示是否继续，选yes即可。</p><p>再编辑Hexo的config.yml文件，找到Deployment, 修改为</p><pre class="line-numbers language-bash"><code class="language-bash">deploy:  type: <span class="token function">git</span>   repo: ubuntu@server_ip:/var/repo/hexo_static.git  branch: master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>最后记得安装Hexo部署到Git仓库的包.</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-deployer-git --savehexo d<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 部署 </tag>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>从零开始教你使用hexo搭建个人博客</title>
      <link href="2020/11/09/hexo/"/>
      <url>2020/11/09/hexo/</url>
      
        <content type="html"><![CDATA[<p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p><h6 id="萌新一枚，有误轻喷。"><a href="#萌新一枚，有误轻喷。" class="headerlink" title="萌新一枚，有误轻喷。"></a>萌新一枚，有误轻喷。</h6><h2 id="1-安装node-js"><a href="#1-安装node-js" class="headerlink" title="1.安装node.js"></a>1.安装node.js</h2><p>在 Windows 环境下安装 Node.js 非常简单，仅须到<a href="https://nodejs.org/en/download/">官网下载</a>安装文件并执行即可完成安装。<br>（无脑下一步就行了，不需要配置环境变量。）</p><h2 id="2-安装git"><a href="#2-安装git" class="headerlink" title="2.安装git"></a>2.安装git</h2><p>去<a href="https://git-scm.com/download/win">Git官网</a>根据你的电脑参数，下载对应版本。<br>下载完成，通过在命令行输入 git version 查看是否安装成功，有输出版本号说明安装成功。</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">git</span> version<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><a id="more"></a><p>鼠标邮件菜单里就多了Git GUI Here和Git Bash Here两个按钮，一个是图形界面的Git操作，一个是命令行，我们选择Git Bash Here。</p><h2 id="3-安装Hexo"><a href="#3-安装Hexo" class="headerlink" title="3.安装Hexo"></a>3.安装Hexo</h2><p>桌面右键鼠标，点击Git Bash Here，输入npm命令即可安装</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-cli -g<span class="token function">npm</span> <span class="token function">install</span> hexo-deployer-git --save<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>第一句是安装hexo，第二句是安装hexo部署到git page的deployer，两个都需要安装。</p><h2 id="4-Hexo初始化配置"><a href="#4-Hexo初始化配置" class="headerlink" title="4.Hexo初始化配置"></a>4.Hexo初始化配置</h2><p>创建Hexo文件夹<br>安装完成后，根据自己喜好建立目录（如E:\hexo），直接进入E:\hexo文件夹下右键鼠标，点击Git Bash Here，进入Git命令框，执行以下操作。</p><pre class="line-numbers language-bash"><code class="language-bash">hexo init<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>本地查看效果<br>执行下面语句，执行完即可登录localhost:4000查看效果</p><pre class="line-numbers language-bash"><code class="language-bash">hexo ghexo s<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="5-美化自己博客"><a href="#5-美化自己博客" class="headerlink" title="5.美化自己博客"></a>5.美化自己博客</h2><p>一、进入<a href="https://hexo.io/themes/">Hexo的官网主题专栏</a></p><p>二、挑选我们喜欢的主题<br>可以看到有很多主题给我们选，我们只要选择喜欢的主题点击进去，然后进入到它的github地址，我们只要把这个地址复制下来(例如我是选择：zzoman2015这个主题)</p><p>三、克隆主题<br>再打开Hexo文件夹下的themes目录（E:\hexo），右键Git Bash，在命令行输入:</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">git</span> clone https://github.com/reumia/hexo-theme-zzoman2015 themes/zzoman2015<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>上面的地址可以换成你喜欢的主题地址，其中themes/zzoman2015代表下载到themes文件下载的next文件夹中，其实themes是所有的主题文件夹，zzoman2015代表当前主题的名称。</p><p>四、修改Hexo配置文件<br>下载完成后，打开Hexo文件夹下的配置文件_config.yml</p><p>修改参数为：theme: zzoman2015</p><p>五、部署主题，本地查看效果</p><p>返回Hexo目录，右键Git Bash，输入</p><pre class="line-numbers language-bash"><code class="language-bash">hexo ghexo s<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>六、打开自己的主页，即可看到修改后的效果</p><h4 id="一、用hexo发表新文章"><a href="#一、用hexo发表新文章" class="headerlink" title="一、用hexo发表新文章"></a>一、用hexo发表新文章</h4><p>hexo n “文章标题”<br>其中 java 为文章标题，执行命令 hexo n “java” 后，会在E:\hexo\source_posts中生成 java.md文件，用编辑器打开编写即可。</p><pre class="line-numbers language-bash"><code class="language-bash">hexo n <span class="token string">"java"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>当然，也可以直接在E:\hexo\source_posts中新建一个md文件，我就是这么做的。 写完后，推送到服务器上，执行以下命令即可在我们的站点看到新的文章。</p><p>如果博客中不自己设置博客的简介的话默认会从博客内容中选择，在xx.md中可以使用下面的方式设置博客的简介：</p><pre class="line-numbers language-bash"><code class="language-bash">简介内容<span class="token operator">&lt;</span><span class="token operator">!</span>-- <span class="token function">more</span> --<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>推送</p><pre class="line-numbers language-bash"><code class="language-bash">hexo g <span class="token comment" spellcheck="true">#生成</span>hexo d <span class="token comment" spellcheck="true">#部署 # 可与hexo g合并为 hexo d -g</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 部署 </tag>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World1</title>
      <link href="2020/11/06/hello-world/"/>
      <url>2020/11/06/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><a id="more"></a><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
